{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","CardList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCkBLK,EAvBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACX,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIdC,EAZG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACTU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEfI,EARA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCcJC,G,wDAjBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHD,E,qDAOtB,SAAmBC,EAAOC,GACtBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,wDAEJG,KAAKX,MAAMK,a,GAfKQ,cC2CZC,E,kDAtCX,aAAe,IAAD,8BACN,gBAWRC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAXxC,EAAKZ,MAAQ,CACTjB,OAAS,GACT2B,YAAa,IAJP,E,qDAOd,WAAoB,IAAD,OACfG,MAAM,4CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACtB,OAAOkC,S,oBAK1C,WACI,MAA8Bb,KAAKJ,MAA5BjB,EAAP,EAAOA,OAAQ2B,EAAf,EAAeA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQtC,EAAOwC,OAGP,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACK,cAACgB,EAAD,CAAUzC,OAAQmC,WAPnC,6C,GAtBMZ,aCMHmB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.311092bd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-S\">\r\n            <img alt ='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({robots}) => {\r\n        return (\r\n            <div>\r\n            {\r\n                robots.map((user,i)=>{\r\n                    return (\r\n                        <Card \r\n                        key={i}\r\n                        id={robots[i].id} \r\n                        name={robots[i].name}\r\n                        email={robots[i].email}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n          \r\n\r\n        )\r\n    \r\n\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input className='pa3 ba b--green bg-lightest-blue' \r\n                    type=\"search\" \r\n                    placeholder=\"search robots\"\r\n                    onChange={searchChange} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n    \r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '2px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false}\r\n    }\r\n\r\n\r\ncomponentDidCatch (error, info) {\r\n    this.setState({hasError:true});\r\n};\r\nrender (){\r\n    if(this.state.hasError){\r\n        return <h1>Opps. This is not good</h1>\r\n    }\r\n    return this.props.children;\r\n}\r\n}\r\nexport default ErrorBoundry;","import React , {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css' ;\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nclass App extends Component {\r\n    constructor (){\r\n            super();\r\n        this.state = {\r\n            robots : [],\r\n            searchField :''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.cypress.io/users')\r\n        .then(response => response.json())\r\n         .then(users => this.setState({robots:users}));\r\n    }\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchField:event.target.value})\r\n    }\r\n    render (){\r\n        const {robots, searchField} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n        return !robots.length?\r\n            <h1>Loading</h1> :\r\n        (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                             <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                        \r\n                    </Scroll>\r\n                </div>\r\n            )\r\n    }\r\n\r\n}\r\n\r\nexport default App ;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}